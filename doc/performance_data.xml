<appendix id="perf_data"><title>MRNet Stream Performance Data</title>

<para>The primary abstraction for communication and data processing
within MRNet is the stream, so performance metrics and contexts are
associated with actions on a particular stream.</para>
<para>All data is recorded as instances of a <literal>perf_data_t</literal>, which
is simply a union type that can hold a 64-bit signed integer, a 64-bit unsigned 
integer, or a double precision float. As shown below, the data values can be
accessed using the <literal>i</literal>, <literal>u</literal>, or <literal>d</literal>
union fields.</para>
<literal>"typedef union { int64_t i; uint64_t u; double d; } perfdata_t;"</literal>

<para>
Metrics define the type of performance data to record. The supported metric types are:
<itemizedlist>
<listitem><literal>PERFDATA_MET_NUM_BYTES</literal>: count of data bytes 
(<type>uint64_t</type>)</listitem>
<listitem><literal>PERFDATA_MET_NUM_PKTS</literal>: count of data packets 
(<type>uint64_t</type>)</listitem>
<listitem><literal>PERFDATA_MET_ELAPSED_SEC</literal>: elapsed seconds 
(<type>double</type>)</listitem>
<listitem><literal>PERFDATA_MET_CPU_USR_PCT</literal>: percent CPU utilization by user 
(<type>double</type>)</listitem>
<listitem><literal>PERFDATA_MET_CPU_USR_PCT</literal>: percent CPU utilization by system 
(<type>double</type>)</listitem>
<listitem><literal>PERFDATA_MET_MEM_VIRT_KB</literal>: virtual memory footprint in KB 
(<type>double</type>)</listitem>
<listitem><literal>PERFDATA_MET_MEM_PHYS_KB</literal>: physical memory footprint in KB 
(<type>double</type>)</listitem>
</itemizedlist>
</para>

<para>
Contexts specify when to record data. The supported contexts are:
<itemizedlist>
<listitem><literal>PERFDATA_CTX_SEND</literal>: when data is sent</listitem>
<listitem><literal>PERFDATA_CTX_RECV</literal>: when data is received</listitem>
<listitem><literal>PERFDATA_CTX_FILT_IN</literal>: before executing transformation filter</listitem>
<listitem><literal>PERFDATA_CTX_FILT_OUT</literal>: after executing transformation filter</listitem>
<listitem><literal>PERFDATA_CTX_NONE</literal>: when data is collected</listitem>
</itemizedlist>
</para>

<para>
The following table shows which metrics are valid for a given context.
When a metric is valid for only <literal>CTX_FILT_OUT</literal>, the 
metric is actually recorded through a combination of measurements at 
<literal>CTX_FILT_IN</literal> and <literal>CTX_FILT_OUT</literal>.
When a metric is valid for only <literal>CTX_NONE</literal>, the 
data is only recorded at the time it is collected. 
</para>

<table frame="all"><title>Metric-Context Compatibility Matrix</title>
<tgroup cols='6' align='center' colsep='1' rowsep='1'>
<colspec colname='metcol'/>
<colspec colname='sendcol'/>
<colspec colname='recvcol'/>
<colspec colname='fincol'/>
<colspec colname='foutcol'/>
<colspec colname='nonecol'/>
<thead>
<row>
  <entry></entry>
  <entry>CTX_SEND</entry>
  <entry>CTX_RECV</entry>
  <entry>CTX_FILT_IN</entry>
  <entry>CTX_FILT_OUT</entry>
  <entry>CTX_NONE</entry>
</row>
</thead>
<tbody>
<row>
<entry>MET_NUM_BYTES</entry>
<entry>yes</entry><entry>yes</entry><entry>yes</entry><entry>yes</entry><entry>no</entry>
</row>
<row>
<entry>MET_NUM_PKTS</entry>
<entry>yes</entry><entry>yes</entry><entry>yes</entry><entry>yes</entry><entry>no</entry>
</row>
<row>
<entry>MET_ELAPSED_SEC</entry>
<entry>no</entry><entry>no</entry><entry>no</entry><entry>yes</entry><entry>no</entry>
</row>
<row>
<entry>MET_CPU_USR_PCT</entry>
<entry>no</entry><entry>no</entry><entry>no</entry><entry>yes</entry><entry>no</entry>
</row>
<row>
<entry>MET_CPU_SYS_PCT</entry>
<entry>no</entry><entry>no</entry><entry>no</entry><entry>yes</entry><entry>no</entry>
</row>
<row>
<entry>MET_MEM_VIRT_KB</entry>
<entry>no</entry><entry>no</entry><entry>no</entry><entry>no</entry><entry>yes</entry>
</row>
<row>
<entry>MET_MEM_PHYS_KB</entry>
<entry>no</entry><entry>no</entry><entry>no</entry><entry>no</entry><entry>yes</entry>
</row>
</tbody>
</tgroup>
</table>
<note><literal>MET_CPU_USR_PCT</literal>, <literal>MET_CPU_SYS_PCT</literal>, 
<literal>MET_MEM_VIRT_KB</literal>, and <literal>MET_MEM_PHYS_KB</literal> are
currently only supported for Linux.</note>

<para>An example MRNet application that makes use of the Stream performance data
collection facilities is provided in <filename>$MRNET_ROOT/Examples/PerformanceData</filename>.
</para>
</appendix>
