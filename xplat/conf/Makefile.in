#/****************************************************************************
# * Copyright © 2003-2011 Dorian C. Arnold, Philip C. Roth, Barton P. Miller *
# *                  Detailed MRNet usage rights in "LICENSE" file.          *
# ****************************************************************************/
# $Id: Makefile.in,v 1.14 2008/10/09 19:50:12 mjbrim Exp $

@SET_MAKE@

AR      = @AR@
ARFLAGS = @ARFLAGS@
RANLIB  = @RANLIB@
RM      = @RM@
MKDIR_P = mkdir -p
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@

MRNET_STARTUP_METHOD = @MRNET_STARTUP_METHOD@

VERSION       = @MRNET_VERSION@
VERSION_MAJOR = @MRNET_VERSION_MAJOR@

ROOTDIR = @MRNET_ROOT@
BASEDIR = $(ROOTDIR)/xplat
INCDIR  = $(BASEDIR)/include
SRCDIR  = $(BASEDIR)/src

PLATDIR = @PLATFORM_BUILD@
BINDIR  = $(PLATDIR)/bin
LIBDIR  = $(PLATDIR)/lib
OBJDIR  = $(PLATDIR)/obj/xplat
DEPDIR  = $(PLATDIR)/depends/xplat

prefix      = @prefix@
exec_prefix = @exec_prefix@
ILIBDIR = @libdir@
IINCDIR = @includedir@

xplat_INCDIR = $(INCDIR)/xplat
install_INCDIR = $(IINCDIR)/xplat

VPATH = $(SRCDIR)

C_AS_CPLUSPLUS = @C_AS_CPLUSPLUS@

MAKEDEPENDS = $(ROOTDIR)/conf/makedepends.sh

BUILD_SHARED_LIBS = @BUILDSHARED@

WANT_THREADSAFE_LTWT = @LTWT_THREADSAFE@

INCFLAGS = -I$(INCDIR) -I$(SRCDIR) -I$(PLATDIR)

COMPILER_TYPE = @COMPILER_TYPE@
CXX = @CXX@
CXXFLAGS = @CXXFLAGS@ $(INCFLAGS)

SOFLAGS  = @SOFLAGS@

TARGET    = $(LIBDIR)/libxplat.a.$(VERSION)
TARGET_SO = $(LIBDIR)/libxplat.so.$(VERSION)
TARGET_SO_DEPLIBS = @LIBS@

TARGETS = $(TARGET)
ifeq ($(BUILD_SHARED_LIBS), yes)
    TARGETS += $(TARGET_SO)
endif 

XPLAT_SRCS = $(SRCDIR)/Monitor-pthread.C \
             $(SRCDIR)/Mutex-pthread.C \
             $(SRCDIR)/TLSKey-pthread.C \
             $(SRCDIR)/Once-pthread.C \
             $(SRCDIR)/SharedObject-unix.C \
             $(SRCDIR)/Process.C \
             $(SRCDIR)/Process-unix.C \
             $(SRCDIR)/Thread-pthread.C \
             $(SRCDIR)/Tokenizer.C \
             $(SRCDIR)/NetUtils.C \
             $(SRCDIR)/NetUtils-unix.C \
             $(SRCDIR)/PathUtils-unix.C \
             $(SRCDIR)/SocketUtils.C \
             $(SRCDIR)/SocketUtils-unix.C \
             $(SRCDIR)/Error-unix.C

XPLAT_HEADERS = $(wildcard $(xplat_INCDIR)/*.h)
INSTALL_HEADERS = $(addprefix $(install_INCDIR)/, $(notdir $(XPLAT_HEADERS)))

XPLAT_OBJS = $(addprefix $(OBJDIR)/, $(patsubst %.C,%.o,$(patsubst %.c,%.o,$(notdir $(XPLAT_SRCS)))))
XPLAT_DEPS = $(addprefix $(DEPDIR)/, $(patsubst %.C,%.d,$(patsubst %.c,%.d,$(notdir $(XPLAT_SRCS)))))

all: $(TARGETS)

sharedobj: $(TARGET_SO)

$(TARGET): $(XPLAT_OBJS)
	@echo Archiving `basename $@` ...
	$(AR) $(ARFLAGS) $@ $^ ; \
	$(RANLIB) $@
	( cd $(LIBDIR) && $(LN_S) libxplat.a.$(VERSION) libxplat.a )

$(TARGET_SO): $(XPLAT_OBJS)
	@echo Building `basename $@` ...
	$(CXX) $(SOFLAGS) -o $@ $(XPLAT_OBJS) $(TARGET_SO_DEPLIBS)
	( cd $(LIBDIR) && \
	  $(LN_S) libxplat.so.$(VERSION) libxplat.so.$(VERSION_MAJOR) && \
	  $(LN_S) libxplat.so.$(VERSION_MAJOR) libxplat.so )

install-prep:
	for dir in $(ILIBDIR) $(install_INCDIR) ; do \
	    if [ ! -d $$dir ] ; then \
	        $(MKDIR_P) $$dir ; \
	        chmod 755 $$dir ; \
	    fi ; \
	done
	if [ ! -x `echo $(INSTALL) | sed 's/ .*$$//'` ] ; then \
	    chmod +x `echo $(INSTALL) | sed 's/ .*$$//'` ; \
	fi

$(INSTALL_HEADERS): $(install_INCDIR)/%: $(xplat_INCDIR)/%
	@echo Installing XPlat header $(<F)
	$(INSTALL_DATA) $< $(@D)

install: $(TARGETS) install-prep $(INSTALL_HEADERS)
	$(INSTALL_DATA) $(PLATDIR)/xplat_config.h $(ILIBDIR)/
	@echo Installing XPlat libraries
	$(INSTALL) $(TARGETS) $(ILIBDIR)/
	( cd $(ILIBDIR) && $(LN_S) libxplat.a.$(VERSION) libxplat.a )
	if [ $(BUILD_SHARED_LIBS) = "yes" ] ; then \
	    ( cd $(ILIBDIR) && \
	      $(LN_S) libxplat.so.$(VERSION) libxplat.so.$(VERSION_MAJOR) && \
	      $(LN_S) libxplat.so.$(VERSION_MAJOR) libxplat.so ) ; \
	fi

clean:
	for file in $(XPLAT_DEPS) $(XPLAT_OBJS) ; do \
	    if [ -e $$file ] ; then $(RM) $$file ; fi ; \
	done

distclean: clean
	for file in `find $(SRCDIR) -name "*~" -print` ; do $(RM) $$file ; done

# pattern rules
@VERBOSEMAKE@
.SUFFIXES:
.SUFFIXES: .c .C .o .d

# add phony target to force serial build of xplat.
# this would not be needed if archive was built differently
# -- and then we could build in parallel
.NOTPARALLEL:

$(DEPDIR)/%.d: %.C
	@echo Building depends file `basename $@` ...
	$(MAKEDEPENDS)  $< $*.o $@ $(INCFLAGS)

$(OBJDIR)/%.o: %.c
	@echo Compiling `basename $@` ...
	$(CXX) $(CXXFLAGS) $(C_AS_CPLUSPLUS) -o $@ -c $<

$(OBJDIR)/%.o: %.C
	@echo Compiling `basename $@` ...
	$(CXX) $(CXXFLAGS) -o $@ -c $<

# make sure file dependencies are used
-include $(XPLAT_DEPS)
