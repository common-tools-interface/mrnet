#/****************************************************************************
# * Copyright © 2003-2011 Dorian C. Arnold, Philip C. Roth, Barton P. Miller *
# *                  Detailed MRNet usage rights in "LICENSE" file.          *
# ****************************************************************************/
# $Id: Makefile.in,v 1.14 2008/10/09 19:50:12 mjbrim Exp $

ROOTDIR = @MRNET_ROOT@
SRCDIR  = $(ROOTDIR)/src/lightweight

PLATDIR = @PLATFORM_BUILD@
BINDIR   = $(PLATDIR)/bin
LIBDIR   = $(PLATDIR)/lib
OBJDIR   = $(PLATDIR)/obj/ltwt
DEPDIR   = $(PLATDIR)/depends/ltwt

mrnet_INCDIR = $(INCDIR)/mrnet_lightweight
install_INCDIR = $(IINCDIR)/mrnet_lightweight

VPATH = $(SRCDIR) $(ROOTDIR)/src

TARGET           = $(LIBDIR)/libmrnet_lightweight.a.$(VERSION)
TARGET_LOWFAT    = $(LIBDIR)/libmrnet_lightweight_r.a.$(VERSION)
TARGET_SO        = $(LIBDIR)/libmrnet_lightweight.so.$(VERSION)
TARGET_SO_LOWFAT = $(LIBDIR)/libmrnet_lightweight_r.so.$(VERSION)

TARGET_SO_DEPLIBS        = -L$(LIBDIR) -lxplat_lightweight $(LIBS_LIGHTWEIGHT)
TARGET_SO_LOWFAT_DEPLIBS = -L$(LIBDIR) -lxplat_lightweight_r $(LIBS_LOWFAT)

TARGETS = $(TARGET)
SO_LIST = $(TARGET_SO)

ifeq ($(WANT_THREADSAFE_LTWT), yes)
    TARGETS += $(TARGET_LOWFAT)
endif

ifeq ($(BUILD_SHARED_LIBS), yes)
    TARGETS += $(TARGET_SO)
    ifeq ($(WANT_THREADSAFE_LTWT), yes)
        TARGETS += $(TARGET_SO_LOWFAT)
        SO_LIST += $(TARGET_SO_LOWFAT)
    endif
endif 

LTWT_SRCS = $(SRCDIR)/BackEndNode.c \
            $(SRCDIR)/ChildNode.c \
            $(SRCDIR)/DataElement.c \
            $(SRCDIR)/Error.c \
            $(SRCDIR)/Filter.c \
	    $(SRCDIR)/FilterDefinitions.c \
            $(SRCDIR)/Message.c \
            $(SRCDIR)/Network.c \
            $(SRCDIR)/NetworkTopology.c \
            $(SRCDIR)/Packet.c \
            $(SRCDIR)/PeerNode.c \
            $(SRCDIR)/PerfDataEvent.c \
            $(SRCDIR)/SerialGraph.c \
            $(SRCDIR)/Stream.c \
            $(SRCDIR)/utils_lightweight.c \
            $(ROOTDIR)/src/byte_order.c \
            $(ROOTDIR)/src/pdr.c \
            $(ROOTDIR)/src/pdr_mem.c \
            $(ROOTDIR)/src/pdr_sizeof.c

ifeq ($(MRNET_OS), linux)
    LTWT_SRCS += PerfDataSysEvent_linux.c
else
    LTWT_SRCS += PerfDataSysEvent_none.c
endif

LIBMRNET_HEADERS = $(wildcard $(mrnet_INCDIR)/*.h)
INSTALL_HEADERS = $(addprefix $(install_INCDIR)/, $(notdir $(LIBMRNET_HEADERS)))

LTWT_OBJS = $(addprefix $(OBJDIR)/, $(patsubst %.c,%.o,$(notdir $(LTWT_SRCS))))
LOWFAT_OBJS = $(addprefix $(OBJDIR)/, $(patsubst %.c,%_r.o,$(notdir $(LTWT_SRCS))))
LTWT_DEPS = $(addprefix $(DEPDIR)/, $(patsubst %.c,%.d,$(notdir $(LTWT_SRCS))))

all: $(TARGETS)

sharedobj: $(SO_LIST)

$(TARGET): $(LTWT_OBJS)
	@echo Archiving `basename $@` ...
	$(AR) $(ARFLAGS) $@ $^
	$(RANLIB) $@
	( cd $(LIBDIR) && $(LN_S) libmrnet_lightweight.a.$(VERSION) libmrnet_lightweight.a )

$(TARGET_LOWFAT): $(LOWFAT_OBJS)
	@echo Archiving `basename $@` ...
	$(AR) $(ARFLAGS) $@ $^
	$(RANLIB) $@
	( cd $(LIBDIR) && $(LN_S) libmrnet_lightweight_r.a.$(VERSION) libmrnet_lightweight_r.a )

$(TARGET_SO): $(LTWT_OBJS)
	@echo Building `basename $@` ...
	$(CC) $(SOFLAGS) -o $@ $^ $(TARGET_SO_DEPLIBS)
	( cd $(LIBDIR) && \
	  $(LN_S) libmrnet_lightweight.so.$(VERSION) libmrnet_lightweight.so.$(VERSION_MAJOR) && \
	  $(LN_S) libmrnet_lightweight.so.$(VERSION_MAJOR) libmrnet_lightweight.so )

$(TARGET_SO_LOWFAT): $(LOWFAT_OBJS)
	@echo Building `basename $@` ...
	$(CC) $(SOFLAGS) -o $@ $^ $(TARGET_SO_LOWFAT_DEPLIBS)
	( cd $(LIBDIR) && \
	  $(LN_S) libmrnet_lightweight_r.so.$(VERSION) libmrnet_lightweight_r.so.$(VERSION_MAJOR) && \
	  $(LN_S) libmrnet_lightweight_r.so.$(VERSION_MAJOR) libmrnet_lightweight_r.so )

install-prep:
	for dir in $(ILIBDIR) $(install_INCDIR) ; do \
	    if [ ! -d $$dir ] ; then \
	        $(MKDIR_P) $$dir ; \
	        chmod 755 $$dir ; \
	    fi \
	done

$(INSTALL_HEADERS): $(install_INCDIR)/%: $(mrnet_INCDIR)/%
	@echo Installing MRNet lightweight header $(<F)
	$(INSTALL_DATA) $< $(@D)

install: all install-prep $(INSTALL_HEADERS)
	@echo Installing MRNet lightweight libraries
	$(INSTALL) $(TARGETS) $(ILIBDIR)/
	( cd $(ILIBDIR) && $(LN_S) libmrnet_lightweight.a.$(VERSION) libmrnet_lightweight.a )
	if [ $(WANT_THREADSAFE_LTWT) = "yes" ] ; then \
	    ( cd $(ILIBDIR) && $(LN_S) libmrnet_lightweight_r.a.$(VERSION) libmrnet_lightweight_r.a ) ; \
	fi
	if [ $(BUILD_SHARED_LIBS) = "yes" ] ; then \
	    ( cd $(ILIBDIR) && \
	      $(LN_S) libmrnet_lightweight.so.$(VERSION) libmrnet_lightweight.so.$(VERSION_MAJOR) && \
	      $(LN_S) libmrnet_lightweight.so.$(VERSION_MAJOR) libmrnet_lightweight.so ) ; \
	    if [ $(WANT_THREADSAFE_LTWT) = "yes" ] ; then \
		( cd $(ILIBDIR) && \
		  $(LN_S) libmrnet_lightweight_r.so.$(VERSION) libmrnet_lightweight_r.so.$(VERSION_MAJOR) && \
		  $(LN_S) libmrnet_lightweight_r.so.$(VERSION_MAJOR) libmrnet_lightweight_r.so ) ; \
	    fi ; \
	fi

clean:
	for file in $(LTWT_DEPS) $(LTWT_OBJS) $(LOWFAT_OBJS) ; do \
	    if [ -e $$file ] ; then $(RM) $$file ; fi ; \
	done

# pattern rules
@VERBOSEMAKE@
.SUFFIXES:
.SUFFIXES: .c .o .d

# add phony target to force serial build of lightweight backend.
# this would not be needed if archive was built differently
# -- and then we could build in parallel
.NOTPARALLEL:

$(DEPDIR)/%.d: %.c
	@echo Building depends file `basename $@` ...
	$(MAKEDEPENDS)  $< $(OBJDIR)/$*.o $@ $(INCLUDES_LIGHTWEIGHT)

$(OBJDIR)/%.o: %.c
	@echo Compiling `basename $@` ...
	$(CC) $(CCFLAGS) -o $@ -c $<

$(OBJDIR)/%_r.o: %.c
	@echo Compiling `basename $@` ...
	$(CC) $(CCFLAGS) -DMRNET_LTWT_THREADSAFE -o $@ -c $<

$(DEPDIR)/%.d: $(ROOTDIR)/src/%.c
	@echo Building depends file `basename $@` ...
	$(MAKEDEPENDS)  $< $(OBJDIR)/$*.o $@ $(INCLUDES_LIGHTWEIGHT)

$(OBJDIR)/%.o: $(ROOTDIR)/src/%.c
	@echo Compiling `basename $@` ...
	$(CC) $(CCFLAGS) -o $@ -c $<

$(OBJDIR)/%_r.o: $(ROOTDIR)/src/%.c
	@echo Compiling `basename $@` ...
	$(CC) $(CCFLAGS) -DMRNET_LTWT_THREADSAFE -o $@ -c $<

# make sure file dependencies are determiend and used
-include $(LTWT_DEPS)
