dnl Process this file with autoconf to produce a configure script.

AC_PREREQ(2.59)
AC_INIT(MRNet,[],[paradyn@cs.wisc.edu],[mrnet],[http://www.paradyn.org/mrnet/])
AC_CONFIG_SRCDIR(src/Network.C)
AC_CONFIG_AUX_DIR(conf)

abs_srcdir=`cd $srcdir && pwd`

dnl === C++ COMPILERS ===
dnl TODO: figure out dlopen()/shared object idiosyncracies when using non-GNU compilers
AC_PROG_CC(xlc_r cc gcc pgcc icc)
AC_PROG_CXX(xlC_r CC g++ pgCC icpc)
AC_LANG(C++)

dnl === CONFIGURE OPTIONS
AC_ARG_WITH(startup,
            [AS_HELP_STRING([--with-startup=METHOD],
                            [Tree instantiation method - "ssh" (default), "cray_xt"])],
            [MRNET_STARTUP_METHOD="${withval}"],
            [MRNET_STARTUP_METHOD="ssh"])
AC_ARG_WITH(alpstoolhelp-lib,
            [AS_HELP_STRING([--with-alpstoolhelp-lib],
                            [(CrayXT only) Absolute path to directory containing libalps library])],
            [CRAYXT_ATH_LIBDIR="${withval}"],
            [CRAYXT_ATH_LIBDIR=""])
    
AC_ARG_WITH(alpstoolhelp-inc,
            [AS_HELP_STRING([--with-alpstoolhelp-inc],
                            [(CrayXT only) Absolute path to directory containing libalps.h])],
            [CRAYXT_ATH_INCDIR="${withval}"],
            [CRAYXT_ATH_INCDIR=""])

AC_ARG_ENABLE(shared,
    [AS_HELP_STRING([--enable-shared],[Build shared object version of mrnet library (default off)])],
    [ BUILDSHARED="yes" ],
    [ BUILDSHARED="no"] )
AC_SUBST(BUILDSHARED)

AC_ARG_ENABLE(verbosebuild,
    [AS_HELP_STRING([--enable-verbosebuild],[Display commands during build (default off)])],
    [ VERBOSEMAKE="" ],
    [ VERBOSEMAKE=".SILENT:"] )
AC_SUBST(VERBOSEMAKE)

AC_ARG_ENABLE(debug,
    [AS_HELP_STRING([--enable-debug],[Enable debug mode options (default off)])],
    [ debug_mode="yes" ],
    [ debug_mode="no" ])

AC_ARG_WITH(purify,
    [AS_HELP_STRING([--with-purify],[Use purify for memory debugging])],
    [ if test "${withval}" = yes; then
          AC_PATH_PROG(PURIFY, purify)
      else
          PURIFY="${withval}"
      fi
    ])
AC_SUBST(PURIFY)


dnl === Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS([arpa/inet.h fcntl.h limits.h netdb.h netinet/in.h signal.h sys/ioctl.h sys/socket.h sys/sockio.h sys/time.h])

dnl === Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_CONST
AC_TYPE_PID_T

dnl === Checks for library functions.
AC_FUNC_FORK
AC_CHECK_FUNCS([gethostbyname socket strchr strerror])


dnl === Check for required programs
AC_PROG_MAKE_SET
AC_PROG_INSTALL
AC_PROG_RANLIB
AC_PROG_YACC
AC_PATH_PROG(GREP, grep)
AC_SUBST(GREP)
AC_PATH_PROG(CP, cp)
AC_SUBST(CP)

AC_PATH_PROG(RM, rm)
AC_SUBST(RM)

AC_PATH_PROG(FLEX, flex, notfound)
if test "$FLEX" = "notfound" ; then
    AC_MSG_ERROR([flex not found in \$PATH, is it installed?])
fi
AC_SUBST(FLEX)

dnl === Check for Boost C++ shared-ptr ===
HAVE_BOOST="no"
AC_CHECK_HEADER([boost/shared_ptr.hpp],[HAVE_BOOST="yes"])

dnl === Get necessary macros
STDCFLAGS="-D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS"
CXXFLAGS="$CXXFLAGS $STDCFLAGS"
CFLAGS="$CFLAGS $STDCFLAGS"

dnl === Ignore user-requested debug/optimization levels
CXXFLAGS=`echo $CXXFLAGS | sed 's/-g //; s/-O //; s/-O1 //; s/-O2 //; s/-O3 //'`
CFLAGS=`echo $CFLAGS | sed 's/-g //; s/-O //; s/-O1 //; s/-O2 //; s/-O3 //'`

dnl === COMPILER-SPECIFIC OPTIONS ===

PD_COMPILER_TYPE

CXXDEBUGFLAGS="-g"
CDEBUGFLAGS="-g"

CXXOPTFLAGS="-O2"
COPTFLAGS="-O2"

if test $COMPILER_TYPE = "gnu" ; then

    CXXFLAGS="$CXXFLAGS -Dcompiler_gnu -fno-default-inline -fPIC"
    CFLAGS="$CFLAGS -Dcompiler_gnu -fPIC"

    SOFLAGS="$SOFLAGS -fPIC -shared -rdynamic"

    C_AS_CPLUSPLUS="-x c++"

    AC_PATH_PROG(AR, ar)
    AC_SUBST(AR)
    ARFLAGS="crv"
    AC_SUBST(ARFLAGS)

elif test $COMPILER_TYPE = "aix-native" ; then

    CXXFLAGS="$CXXFLAGS -Dcompiler_ibm"
    CFLAGS="$CFLAGS -Dcompiler_ibm"

    SOFLAGS="$SOFLAGS -G"

    C_AS_CPLUSPLUS="-+"

    AC_PATH_PROG(AR, ar)
    AC_SUBST(AR)
    ARFLAGS="crv"
    AC_SUBST(ARFLAGS)

elif test $COMPILER_TYPE = "forte" ; then

    CXXFLAGS="$CXXFLAGS -Dcompiler_sun -KPIC"
    CFLAGS="$CFLAGS -Dcompiler_sun -KPIC"

    CXXOPTFLAGS="-xO2"
    COPTFLAGS="-xO2"

    CXXDEBUGFLAGS="-g -xO0"
    CDEBUGFLAGS="-g -xO0"

    SOFLAGS="$SOFLAGS -G"

    AC_PATH_PROG(AR, CC)
    AC_SUBST(AR)
    ARFLAGS="-xar -o"
    AC_SUBST(ARFLAGS)

elif test $COMPILER_TYPE = "pgi" ; then

    CXXFLAGS="$CXXFLAGS -Dcompiler_pgi -D_GNU_SOURCE -fPIC"
    CFLAGS="$CFLAGS -Dcompiler_pgi -D_GNU_SOURCE -fPIC"

    CXXDEBUGFLAGS="-g -O0"
    CDEBUGFLAGS="-g -O0"

    GOOD_CXXFLAGS="$CXXFLAGS"
    CXXFLAGS="$CXXFLAGS --one_instantiation_per_object"
    AC_MSG_CHECKING([[whether pgCC supports --one_instantiation_per_object]])
    AC_COMPILE_IFELSE( [AC_LANG_PROGRAM([],[])],
                       [AC_MSG_RESULT(yes) ; PGI_OLD_TEMPLATES="yes" ; debug_mode="no"],
                       [AC_MSG_RESULT(no) ; PGI_OLD_TEMPLATES="no"])
    AC_SUBST(PGI_OLD_TEMPLATES)
    CXXFLAGS="$GOOD_CXXFLAGS"

    SOFLAGS="$SOFLAGS -fPIC -shared"

    AC_PATH_PROG(AR, ar)
    AC_SUBST(AR)
    ARFLAGS="crv"
    AC_SUBST(ARFLAGS)

elif test $COMPILER_TYPE = "intel" ; then

    CXXFLAGS="$CXXFLAGS -Dcompiler_intel -fPIC"
    CFLAGS="$CFLAGS -Dcompiler_intel -fPIC"
    
    CXXDEBUGFLAGS="-g -O0"
    CDEBUGFLAGS="-g -O0"

    SOFLAGS="$SOFLAGS -fPIC -shared"

    AC_PATH_PROG(AR, ar)
    AC_SUBST(AR)
    ARFLAGS="crv"
    AC_SUBST(ARFLAGS)

fi

dnl === Use OUR debug/optimization levels
if test $debug_mode = "yes" ; then
    CXXFLAGS="$CXXDEBUGFLAGS $CXXFLAGS -DDEBUG"
    CFLAGS="$CDEBUGFLAGS $CFLAGS -DDEBUG"
else
    CXXFLAGS="$CXXOPTFLAGS $CXXFLAGS"
    CFLAGS="$COPTFLAGS $CFLAGS"
fi

dnl === SETTING MRNET PLATFORM VARIABLES ===

dnl MRNET_ARCH is host returned by config.guess with
dnl all `-` and `.` characters replaced by `_` so that a
dnl -D MRNET_ARCH can be passed to the compiler
dnl without it complaining

AC_CANONICAL_HOST
changequote(<<, >>)dnl
MRNET_ARCH=`echo $host | sed 's/[-|.]/_/g'`
MRNET_OS=`echo $host_os | sed 's/[-0-9].*//'`
MRNET_OSVER=`echo $host_os | sed 's/[-|.]/_/g'`
MRNET_ROOT=$abs_srcdir
MRNET_VERSION='`cat "$(srcdir)"/VERSION`'
changequote([, ])dnl

AC_DEFINE([COMMNODE_EXE], "mrnet_commnode", [Set to default path of mrnet_commnode executable.])
AC_SUBST(MRNET_ARCH)
AC_SUBST(MRNET_OS)
AC_SUBST(MRNET_ROOT)
AC_SUBST(MRNET_VERSION)

dnl === OS-SPECIFIC COMPILER OPTIONS ===

LIBS="-lm -lpthread -ldl"
LIBS_LIGHTWEIGHT="-lm"
EXTRA_LIBS=""

case "$host_os" in
  *linux*)
    LDFLAGS="$LDFLAGS -Wl,-E"
    CN_LDFLAGS="$LDFLAGS"
    os_release=`uname -r`
    case "$os_release" in
      2.4*)
        CXXFLAGS="$CXXFLAGS -Dos_linux=24"
        CFLAGS="$CFLAGS -Dos_linux=24"
        ;;
      2.6*)
        CXXFLAGS="$CXXFLAGS -Dos_linux=26"
        CFLAGS="$CFLAGS -Dos_linux=26"
        ;;
      *)
        CXXFLAGS="$CXXFLAGS -Dos_linux"
        CFLAGS="$CFLAGS -Dos_linux"
        ;;
    esac
    ;;
  *aix4*)
    CXXFLAGS="$CXXFLAGS -Dos_aix=4"
    CFLAGS="$CFLAGS -Dos_aix=4"
    ;;
  *aix5*)
    CXXFLAGS="$CXXFLAGS -Dos_aix=5"
    CFLAGS="$CFLAGS -Dos_aix=5"
    ;;
  *solaris2.8*)
    LIBS="-lrpcsvc -lsocket -lnsl $LIBS"
    LIBS_LIGHTWEIGHT="-lrpcsvc -lsocket -lnsl $LIBS_LIGHTWEIGHT"
    CXXFLAGS="$CXXFLAGS -Dos_solaris=8"
    CFLAGS="$CFLAGS -Dos_solaris=8"
    ;;
  *solaris2.9*)
    LIBS="-lrpcsvc -lsocket -lnsl $LIBS"
    LIBS_LIGHTWEIGHT="-lrpcsvc -lsocket -lnsl $LIBS_LIGHTWEIGHT"
    CXXFLAGS="$CXXFLAGS -Dos_solaris=9"
    CFLAGS="$CFLAGS -Dos_solaris=9"
    ;;
  *sunos*)
    LIBS="-lrpcsvc -lsocket -lnsl $LIBS"
    LIBS_LIGHTWEIGHT="-lrpcsvc -lsocket -lnsl $LIBS_LIGHTWEIGHT"
    CXXFLAGS="$CXXFLAGS -Dos_sunos"
    CFLAGS="$CFLAGS -Dos_sunos"
    ;;
  *)
    ;;
esac

dnl === CRAY XT OPTIONS ===
if test $MRNET_STARTUP_METHOD = "ssh" ; then
    AC_CHECK_FILE([/proc/cray_xt/nid],[MRNET_STARTUP_METHOD="cray_xt"])
fi
if test $MRNET_STARTUP_METHOD = "cray_xt" ; then

    CXXFLAGS="$CXXFLAGS -Darch_crayxt"
    CFLAGS="$CFLAGS -Darch_crayxt"

    AC_CHECK_HEADERS([alps/alps.h] [alps/alps_toolAssist.h] [alps/apInfo.h], [], 
                     [AC_MSG_ERROR([One of the required ALPS include files was not found: alps/alps.h, alps/alps_toolAssist.h, alps/apInfo.h])])

    HAVE_SYSTEM_LIBALPS="no"
    AC_CHECK_HEADERS([alps/libalps.h], HAVE_SYSTEM_LIBALPS="yes")
    if test $HAVE_SYSTEM_LIBALPS == "no" ; then
      if test "$CRAYXT_ATH_INCDIR" != "" ; then
        CXXFLAGS="$CXXFLAGS -I$CRAYXT_ATH_INCDIR"
        AC_CHECK_HEADERS([libalps.h], [], 
                         [AC_MSG_ERROR(Can't find libalps.h. Specify proper directory with --with-alpstoolhelp-inc)],
[#if HAVE_ALPS_ALPS_TOOLASSIST_H
# include <alps/alps_toolAssist.h>
#endif
#if HAVE_ALPS_APINFO_H 
# include <alps/apInfo.h> 
#endif]
                        )
      fi
    fi

    CRAYXT_ATH_LIBS="-Wl,-Bstatic -lalps -lxmlrpc -Wl,-Bdynamic"
    if test "$CRAYXT_ATH_LIBDIR" != "" ; then
        LIBS_HOLD=$LIBS
	LIBS="-L$CRAYXT_ATH_LIBDIR $CRAYXT_ATH_LIBS $LIBS_HOLD"
        AC_CHECK_LIB(alps, [alps_launch_tool_helper], 
                     [LIBS="$LIBS_HOLD"; EXTRA_LIBS="-L$CRAYXT_ATH_LIBDIR $CRAYXT_ATH_LIBS $EXTRA_LIBS"], 
                     [AC_MSG_ERROR(Can't find libalps. Specify proper directory with --with-alpstoolhelp-lib)],
                     [-lxmlrpc])
    fi
fi

AC_SUBST(MRNET_STARTUP_METHOD)

AC_MSG_CHECKING([[whether we can compile/link with "$CXX $CXXFLAGS $LIBS"]])
AC_LINK_IFELSE( [AC_LANG_PROGRAM([],[])],
                [AC_MSG_RESULT(yes)],
                [AC_MSG_ERROR(no)])

AC_SUBST(CXX)
AC_SUBST(CXXFLAGS)
AC_SUBST(CC)
AC_SUBST(CFLAGS)
AC_SUBST(LDFLAGS)
AC_SUBST(CN_LDFLAGS)
AC_SUBST(SOFLAGS)
AC_SUBST(C_AS_CPLUSPLUS)
AC_SUBST(LIBS)
AC_SUBST(LIBS_LIGHTWEIGHT)
AC_SUBST(EXTRA_LIBS)
AC_SUBST(HAVE_BOOST)

AC_C_BIGENDIAN
AC_CHECK_SIZEOF(char)
AC_CHECK_SIZEOF(short)
AC_CHECK_SIZEOF(int)
AC_CHECK_SIZEOF(long)
AC_CHECK_SIZEOF(float)
AC_CHECK_SIZEOF(double)

PLATFORM_BUILD="`pwd`/build/${host}"
AC_SUBST(PLATFORM_BUILD)

AS_MKDIR_P([${PLATFORM_BUILD}/bin])
AS_MKDIR_P([${PLATFORM_BUILD}/depends/ltwt])
AS_MKDIR_P([${PLATFORM_BUILD}/depends/xplat/ltwt])
AS_MKDIR_P([${PLATFORM_BUILD}/lib])
AS_MKDIR_P([${PLATFORM_BUILD}/obj/ltwt])
AS_MKDIR_P([${PLATFORM_BUILD}/obj/xplat/ltwt])

AC_CONFIG_HEADER([${PLATFORM_BUILD}/config.h:conf/config.h.in])
AC_CONFIG_FILES([${PLATFORM_BUILD}/Makefile:conf/Makefile.in ${PLATFORM_BUILD}/Makefile.ltwt:conf/Makefile.ltwt.in ${PLATFORM_BUILD}/Makefile.xplat:xplat/conf/Makefile.in ${PLATFORM_BUILD}/Makefile.xplat_ltwt:xplat/conf/Makefile.ltwt.in ${PLATFORM_BUILD}/Makefile.examples:conf/Makefile.examples.in])

AC_OUTPUT
